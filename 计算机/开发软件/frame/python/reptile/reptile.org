* reptile爬虫
** 流程 
*** 1.导入库

    #+begin_src python
 # 导入requests库
 import requests
 # 导入文件操作库
 import os
 # bs4全名BeautifulSoup，是编写python爬虫常用库之一，主要用来解析html标签。
 import bs4
 from bs4 import BeautifulSoup
 # 基础类库
 import sys
 # Python 3.x 解决中文编码问题
 import importlib
 importlib.reload(sys)
    #+end_src
*** 2.定义方法

 #+begin_src python
 def download(page_no, file_path):
     # 这里写代码逻辑
 #+end_src
*** 3.定义全局变量

 #+begin_src python
 # 给请求指定一个请求头来模拟chrome浏览器
 global headers # 告诉编译器这是全局变量 headers 
 headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36'}

 # 函数内使用之前需要
 # 告诉编译器我在这个方法中使用的a是刚才定义的全局变量 headers ，而不是方法内部的局部变量。
 global headers
 #+end_src
***  4.防盗链
 有些网站加入了防盗链

 #+begin_src python
 headers = {'Referer': href}
 img = requests.get(url, headers=headers)
 #+end_src
*** 5.切换版本
 #+begin_src sh
 alias python='/usr/local/bin/python3.7'
 #+end_src
*** 6.异常捕获

 #+begin_src python
 try:
     # 业务逻辑
 except Exception as e:
    print(e)
 #+end_src
*** 7.执行脚本
 #+begin_src python
 python3 mzitu.py 
 # 或者后台执行
 nohup python3 -u mzitu.py > mzitu.log 2>&1 &
 #+end_src



 A Visual Studio Code extension that provides basic notebook support for language kernels that are supported in Jupyter Notebooks today. Many language kernels will work with no modification. To enable advanced features, modifications may be needed in the VS Code language extensions.

The Jupyter Extension includes the Jupyter Keymaps extension by default. The Jupyter Keymaps extension provides Jupyter-consistent keymaps and can be disabled or uninstalled.
  distutils.errors.DistutilsPlatformError: Microsoft Visual C++ 14.0 or greater is required. Get it with "Microsoft C++ Build Tools": https://visualstudio.microsoft.com/visual-cpp-build-tools/
